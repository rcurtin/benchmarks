# Block for general settings.
library: general
settings:
    # Time until a timeout in seconds.
    timeout: 9000
    databaseHost: 'localhost'
    port: 3306
    database: 'benchmarks'
    driver : 'mysql'
    keepReports: 20
    bootstrap: 10
    libraries: ['mlpack', 'shogun', 'weka', 'scikit', 'mlpy', 'flann', 'ann', 'annoy', 'mrpt', 'dlibml']
    version: ['HEAD', '3.2.0', '3.6.11', '0.15.1', '3.5.0', '1.8.4', '1.1.2', '1.8.3', '0.1', '19.4']
---
#  MLPACK:
#  A Scalable C++  Machine Learning Library
library: mlpack
methods:
    PCA:
        run: ['metric']
        script: methods/mlpack/pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv']

    PERCEPTRON:
        run: ['metric']
        script: methods/mlpack/perceptron.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
              options:
                max_iterations: 10000

    DecisionStump:
        run: ['metric']
        script: methods/mlpack/decision_stump.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/dexter_train.csv', 'datasets/dexter_test.csv'],
                       ['datasets/iris_train.csv', 'datasets/iris_test.csv'],
                       ['datasets/optdigits_train.csv', 'datasets/optdigits_test.csv'],
                       ['datasets/shuttle_train.csv', 'datasets/shuttle_test.csv'],
                       ['datasets/transfusion_train.csv', 'datasets/transfusion_test.csv'],
                       ['datasets/arcene_train.csv', 'datasets/arcene_test.csv'] ]

    NMF:
        run: ['metric']
        script: methods/mlpack/nmf.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/ionosphere.csv', 'datasets/piano_magnitude_spectogram.csv',
                      'datasets/optdigits.csv', 'datasets/waveform.csv',
                      'datasets/TomsHardware.csv', 'datasets/pendigits.csv',
                      'datasets/isolet.csv', 'datasets/mnist_all.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                rank: 6
                seed: 42
                update_rules: multdist

            - files: ['datasets/ionosphere.csv', 'datasets/piano_magnitude_spectogram.csv',
                      'datasets/optdigits.csv', 'datasets/waveform.csv',
                      'datasets/TomsHardware.csv', 'datasets/pendigits.csv',
                      'datasets/isolet.csv', 'datasets/mnist_all.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                rank: 6
                seed: 42
                update_rules: multdiv

            - files: ['datasets/ionosphere.csv', 'datasets/piano_magnitude_spectogram.csv',
                      'datasets/optdigits.csv', 'datasets/waveform.csv',
                      'datasets/TomsHardware.csv', 'datasets/pendigits.csv',
                      'datasets/isolet.csv', 'datasets/mnist_all.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                rank: 6
                seed: 42
                update_rules: als
    NBC:
        run: ['metric']
        script: methods/mlpack/nbc.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv'],
                       ['datasets/transfusion_train.csv', 'datasets/transfusion_test.csv'],
                       ['datasets/madelon_train.csv', 'datasets/madelon_test.csv'] ]

            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv'],
                       ['datasets/transfusion_train.csv', 'datasets/transfusion_test.csv'],
                       ['datasets/madelon_train.csv', 'datasets/madelon_test.csv'] ]
              options:
                incremental: True
    KPCA:
        run: ['metric']
        script: methods/mlpack/kernel_pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: linear

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: gaussian

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: polynomial

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: hyptan

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: laplacian

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: cosine

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: gaussian
                nystroem: true
                sampling_scheme: kmeans

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: polynomial
                nystroem: true
                sampling_scheme: kmeans

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: cosine
                nystroem: true
                sampling_scheme: kmeans

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: gaussian
                nystroem: true
                sampling_scheme: random

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: polynomial
                nystroem: true
                sampling_scheme: random

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: cosine
                nystroem: true
                sampling_scheme: random

    LARS:
          run: ['metric']
          script: methods/mlpack/lars.py
          format: [csv, txt]
          datasets:
              - files: [ ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                         ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'],
                         ['datasets/arcene_X.csv', 'datasets/arcene_y.csv'],
                         ['datasets/madelon_X.csv', 'datasets/madelon_y.csv'] ]
                options:
                  lambda1: 0.01

              - files: [ ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                         ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'],
                         ['datasets/arcene_X.csv', 'datasets/arcene_y.csv'],
                         ['datasets/madelon_X.csv', 'datasets/madelon_y.csv'] ]
                options:
                  lambda1: 0.01
                  lambda2: 0.005
                  use_cholesky: True

    LSH:
        run: ['metric']
        script: methods/mlpack/lsh.py
        format: [csv, txt]
        datasets:
         - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                   'datasets/wine_qual.csv', 'datasets/isolet.csv',
                   'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                   'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                   'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
           options:
              k: 3
              seed: 42

    KMEANS:
        run: ['metric']
        script: methods/mlpack/kmeans.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/waveform.csv', 'datasets/waveform_centroids.csv'] ]
              options:
                clusters: 2

            - files: [ ['datasets/wine.csv', 'datasets/wine_centroids.csv'],
                       ['datasets/iris.csv', 'datasets/iris_centroids.csv'] ]
              options:
                clusters: 3

            - files: [ ['datasets/cloud.csv', 'datasets/cloud_centroids.csv'] ]
              options:
                clusters: 5

            - files: [ ['datasets/USCensus1990.csv', 'datasets/USCensus1990_centroids.csv'] ]
              options:
                clusters: 6

            - files: [ ['datasets/covtype.csv', 'datasets/covtype_centroids.csv'],
                       ['datasets/wine_qual.csv', 'datasets/wine_qual_centroids.csv'] ]
              options:
                clusters: 7

            - files: [ ['datasets/isolet.csv', 'datasets/isolet_centroids.csv'] ]
              options:
                clusters: 26

            - files: [ ['datasets/mnist_all.csv', 'datasets/mnist_all_centroids.csv'],
                       ['datasets/corel-histogram.csv', 'datasets/corel-histogram_centroids.csv'] ]
              options:
                clusters: 10

            - files: [ ['datasets/1000000-10-randu.csv'] ]
              options:
                clusters: 75

    ALLKNN:
        run: ['metric']
        script: methods/mlpack/allknn.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 4

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                seed: 42
                epsilon: 0.0

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                seed: 42
                epsilon: 0.05

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                seed: 42
                epsilon: 0.10

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                seed: 42
                epsilon: 0.15

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                seed: 42
                epsilon: 0.20

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                seed: 42
                epsilon: 0.25

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                seed: 42
                single_mode: True

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                seed: 42
                tree_type: cover

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                seed: 42
                tree_type: cover
                single_mode: True

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                seed: 42
                naive_mode: True

    ALLKFN:
        run: ['metric']
        script: methods/mlpack/allkfn.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                single_mode: True

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                naive_mode: True

    ALLKRANN:
        run: ['metric']
        script: methods/mlpack/allkrann.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                tau: 10

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                tau: 10
                naive_mode: True

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                tau: 10
                single_mode: True

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                tau: 10
                sample_at_leaves: True

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                tau: 10
                first_leaf_exact: True
    RANGESEARCH:
        run: ['metric']
        script: methods/mlpack/range_search.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/ionosphere.csv',
                      'datasets/cloud.csv', 'datasets/vehicle.csv',
                      'datasets/madelon_X.csv', 'datasets/arcene_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/Twitter.csv']
              options:
                max: 0.02

            - files: ['datasets/wine.csv', 'datasets/ionosphere.csv',
                      'datasets/cloud.csv', 'datasets/vehicle.csv',
                      'datasets/madelon_X.csv', 'datasets/arcene_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/Twitter.csv']
              options:
                max: 0.02
                naive_mode: True

            - files: ['datasets/wine.csv', 'datasets/ionosphere.csv',
                      'datasets/cloud.csv', 'datasets/vehicle.csv',
                      'datasets/madelon_X.csv', 'datasets/arcene_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/Twitter.csv']
              options:
                max: 0.02
                single_mode: True
    GMM:
        run: ['metric']
        script: methods/mlpack/gmm.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/artificial_2DSignal.csv', 'datasets/artificial_5DSignal.csv',
                      'datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/vehicle.csv', 'datasets/USCensus1990.csv',
                      'datasets/optdigits.csv', 'datasets/isolet.csv',
                      'datasets/TomsHardware.csv', 'datasets/covtype.csv']
              options:
                gaussians: 3
                seed: 42

            - files: ['datasets/artificial_2DSignal.csv', 'datasets/artificial_5DSignal.csv',
                      'datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/vehicle.csv', 'datasets/USCensus1990.csv',
                      'datasets/optdigits.csv', 'datasets/isolet.csv',
                      'datasets/TomsHardware.csv', 'datasets/covtype.csv']
              options:
                gaussians: 3
                seed: 42
                no_force_positive: True
    DET:
        run: ['metric']
        script: methods/mlpack/det.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/iris.csv', 'datasets/cloud.csv',
                     ['datasets/madelon_train.csv', 'datasets/madelon_test.csv'] ]

            - files: ['datasets/iris.csv', 'datasets/cloud.csv',
                     ['datasets/madelon_train.csv', 'datasets/madelon_test.csv'] ]
              options:
                folds: 20

    EMST:
        run: ['metric']
        script: methods/mlpack/emst.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/iris.csv', 'datasets/vehicle.csv',
                      'datasets/waveform.csv', 'datasets/corel-histogram.csv',
                      'datasets/isolet.csv', 'datasets/tinyImages100k.csv']

            - files: ['datasets/iris.csv', 'datasets/vehicle.csv',
                      'datasets/waveform.csv']
              options:
                naive_mode: True

    LinearRegression:
        run: ['metric']
        script: methods/mlpack/linear_regression.py
        format: [csv, txt]
        datasets:
             - files: [ ['datasets/diabetes_X.csv'], ['datasets/cosExp_X.csv'],
                        ['datasets/mnist_all.csv'], ['datasets/tinyImages100k.csv'],
                        ['datasets/ticdata2000.csv'], ['datasets/TomsHardware.csv'],
                        ['datasets/madelon_train.csv', 'datasets/madelon_test.csv'],
                        ['datasets/arcene_train.csv', 'datasets/arcene_test.csv'] ]

    LocalCoordinateCoding:
        run: ['metric']
        script: methods/mlpack/local_coordinate_coding.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/pendigits.csv']
              options:
                atoms: 12
                seed: 42

            - files: ['datasets/pendigits.csv']
              options:
                atoms: 12
                seed: 42
                normalize: True
    SparseCoding:
        run: ['metric']
        script: methods/mlpack/sparse_coding.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/pendigits.csv']
              options:
                atoms: 12
                seed: 42
                max_iterations: 100

            - files: ['datasets/pendigits.csv']
              options:
                atoms: 12
                seed: 42

            - files: ['datasets/pendigits.csv']
              options:
                atoms: 12
                seed: 42
                normalize: True
    FastMKS:
        run: ['metric']
        script: methods/mlpack/fastmks.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/optdigits.csv']
              options:
                k: 1
                kernel: linear

            - files: ['datasets/optdigits.csv']
              options:
                k: 10
                kernel: linear

            - files: ['datasets/optdigits.csv']
              options:
                k: 10
                single_mode: True
                kernel: linear

            - files: ['datasets/optdigits.csv']
              options:
                k: 10
                kernel: polynomial
                degree: 10

            - files: ['datasets/optdigits.csv']
              options:
                k: 10
                kernel: hyptan

            - files: ['datasets/optdigits.csv']
              options:
                k: 10
                kernel: cosine

            - files: ['datasets/optdigits.csv']
              options:
                k: 10
                kernel: gaussian

            - files: ['datasets/optdigits.csv']
              options:
                k: 10
                kernel: epanechnikov

            - files: ['datasets/optdigits.csv']
              options:
                k: 10
                kernel: triangular

    NCA:
        run: ['metric']
        script: methods/mlpack/nca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/iris_train.csv',
                      ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                      'datasets/wine.csv', 'datasets/ionosphere.csv',
                      'datasets/shuttle_train.csv', 'datasets/madelon_train.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                max_iterations: 2000
                optimizer: sgd
                seed: 42

            - files: ['datasets/iris_train.csv',
                      ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                      'datasets/wine.csv', 'datasets/ionosphere.csv',
                      'datasets/shuttle_train.csv', 'datasets/madelon_train.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                max_iterations: 2000
                optimizer: lbfgs
                seed: 42

            - files: ['datasets/iris_train.csv',
                      ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                      'datasets/wine.csv', 'datasets/ionosphere.csv',
                      'datasets/shuttle_train.csv', 'datasets/madelon_train.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                max_iterations: 2000
                optimizer: lbfgs
                seed: 42
                wolfe: 0.5

            - files: ['datasets/iris_train.csv', ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                      'datasets/wine.csv', 'datasets/ionosphere.csv',
                      'datasets/shuttle_train.csv', 'datasets/madelon_train.csv']
              options:
                max_iterations: 2000
                optimizer: lbfgs
                seed: 42
                wolfe: 0.5
                num_basis: 5

            - files: ['datasets/iris_train.csv',
                      ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                      'datasets/wine.csv', 'datasets/ionosphere.csv',
                      'datasets/shuttle_train.csv', 'datasets/madelon_train.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                max_iterations: 2000
                optimizer: lbfgs
                seed: 42
                num_basis: 5

            - files: ['datasets/iris_train.csv',
                      ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                      'datasets/wine.csv', 'datasets/ionosphere.csv',
                      'datasets/shuttle_train.csv', 'datasets/madelon_train.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                max_iterations: 2000
                normalize: True
                seed: 42

    HMMTRAIN:
        run: ['metric']
        script: methods/mlpack/hmm_train.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/artificial_2DSignal.csv']
              options:
                type: gaussian
                states: 20
                seed: 42

            - files: ['datasets/artificial_1DSignal.csv']
              options:
                type: discrete
                states: 20
                seed: 42

    HMMGENERATE:
        run: ['metric']
        script: methods/mlpack/hmm_generate.py
        format: [csv, txt, xml]
        datasets:
            - files: ['datasets/artificial_2DSignal_hmm.xml']
              options:
                length: 10000

    HMMLOGLIK:
       run: ['metric']
       script: methods/mlpack/hmm_loglik.py
       format: [csv, txt, xml]
       datasets:
           - files: [ ['datasets/artificial_2DSignal.csv', 'datasets/artificial_2DSignal_hmm.xml'] ]

    HMMVITERBI:
       run: ['metric']
       iteration: 3
       script: methods/mlpack/hmm_viterbi.py
       format: [csv, txt, xml]
       datasets:
           - files: [ ['datasets/artificial_2DSignal.csv', 'datasets/artificial_2DSignal_hmm.xml'] ]
---
# MATLAB:
# Numerical computing environment and programming language.
# Requires Machine Learning and statistics toolbox installed.
library: matlab
methods:
    PCA:
        run: ['metric']
        iteration: 3
        script: methods/matlab/pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv',
                      'datasets/artificial_data.csv', 'datasets/ionosphere.csv',
                      'datasets/bank8FM.csv', 'datasets/faces.csv',
                      'datasets/shuttle_train.csv', 'datasets/dexter_test.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']

            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv',
                      'datasets/artificial_data.csv', 'datasets/ionosphere.csv',
                      'datasets/bank8FM.csv', 'datasets/faces.csv',
                      'datasets/shuttle_train.csv', 'datasets/dexter_test.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                new_dimensionality: 2

            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv',
                      'datasets/artificial_data.csv', 'datasets/ionosphere.csv',
                      'datasets/bank8FM.csv', 'datasets/faces.csv',
                      'datasets/shuttle_train.csv', 'datasets/dexter_test.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                new_dimensionality: 2
                scaled: True

    PERCEPTRON:
        run: ['metric']
        script: methods/matlab/perceptron.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
              options:
                max_iterations: 10000
    SVC:
        run: ['metric']
        script: methods/matlab/svc.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

    NMF:
        run: ['metric']
        iteration: 3
        script: methods/matlab/nmf.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/ionosphere.csv', 'datasets/piano_magnitude_spectogram.csv',
                      'datasets/optdigits.csv', 'datasets/waveform.csv',
                      'datasets/TomsHardware.csv', 'datasets/pendigits.csv',
                      'datasets/isolet.csv', 'datasets/mnist_all.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                rank: 6
                seed: 42
                update_rules: multdist

    KMEANS:
        run: ['metric']
        iteration: 3
        script: methods/matlab/kmeans.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/waveform.csv', 'datasets/waveform_centroids.csv'] ]
              options:
                clusters: 2

            - files: [ ['datasets/wine.csv', 'datasets/wine_centroids.csv'],
                       ['datasets/iris.csv', 'datasets/iris_centroids.csv'] ]
              options:
                clusters: 3

            - files: [ ['datasets/cloud.csv', 'datasets/cloud_centroids.csv'] ]
              options:
                clusters: 5

            - files: [ ['datasets/USCensus1990.csv', 'datasets/USCensus1990_centroids.csv'] ]
              options:
                clusters: 6

            - files: [ ['datasets/covtype.csv', 'datasets/covtype_centroids.csv'],
                       ['datasets/wine_qual.csv', 'datasets/wine_qual_centroids.csv'] ]
              options:
                clusters: 7

            - files: [ ['datasets/isolet.csv', 'datasets/isolet_centroids.csv'] ]
              options:
                clusters: 26

            - files: [ ['datasets/mnist_all.csv', 'datasets/mnist_all_centroids.csv'],
                       ['datasets/corel-histogram.csv', 'datasets/corel-histogram_centroids.csv'] ]
              options:
                clusters: 10

            - files: [ ['datasets/1000000-10-randu.csv'] ]
              options:
                clusters: 75
    NBC:
        run: ['metric']
        iteration: 3
        script: methods/matlab/nbc.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
                           
    ALLKNN:
        run: ['metric']
        iteration: 3
        script: methods/matlab/allknn.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                seed: 42

            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                seed: 42
                naive_mode: True

    RANGESEARCH:
        run: ['metric']
        iteration: 3
        script: methods/matlab/range_search.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/ionosphere.csv',
                      'datasets/cloud.csv', 'datasets/vehicle.csv',
                      'datasets/madelon_X.csv', 'datasets/arcene_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/Twitter.csv']
              options:
                max: 0.02

    LinearRegression:
        run: ['metric']
        iteration: 3
        script: methods/matlab/linear_regression.py
        format: [csv, txt]
        datasets:
             - files: [ ['datasets/diabetes_X.csv'], ['datasets/cosExp_X.csv'],
                        ['datasets/mnist_all.csv'], ['datasets/tinyImages100k.csv'],
                        ['datasets/ticdata2000.csv'], ['datasets/TomsHardware.csv'],
                        ['datasets/madelon_train.csv', 'datasets/madelon_test.csv'],
                        ['datasets/arcene_train.csv', 'datasets/arcene_test.csv'] ]
    HMMGENERATE:
        run: ['metric']
        iteration: 3
        script: methods/matlab/hmm_generate.py
        format: [csv, txt, xml]
        datasets:
            - files: ['datasets/artificial_2DSignal_hmm.xml']
              options:
                length: 10000

    LogisticRegression:
            run: ['metric']
            script: methods/matlab/logistic_regression.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

    HMMVITERBI:
       run: ['metric']
       iteration: 3
       script: methods/matlab/hmm_viterbi.py
       format: [csv, txt, xml]
       datasets:
           - files: [ ['datasets/artificial_2DSignal.csv', 'datasets/artificial_2DSignal_hmm.xml'] ]
    DTC:
       run: ['metric']
       script: methods/matlab/dtc.py
       format: [csv, txt, arff]
       datasets:
           - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                      ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                      ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                      ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                      ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                      ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                      ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                      ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                      ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                      ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                      ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                      ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
    KNC:
       run: ['metric']
       script: methods/matlab/knc.py
       format: [csv, txt, arff]
       datasets:
           - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                      ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                      ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                      ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                      ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                      ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                      ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                      ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                      ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                      ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                      ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                      ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
             
             options:
                k: 5

    LDA:
            run: ['metric']
            script: methods/matlab/lda.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
             
    QDA:
            run: ['metric']
            script: methods/matlab/qda.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
    SVR:
        run: ['metric']
        iteration: 3
        script: methods/scikit/svr.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/diabetes.csv'],
                       ['datasets/cosExp.csv'],
                       ['datasets/TomsHardware.csv']]

    RANDOMFOREST:
            run: ['metric']
            script: methods/scikit/random_forest.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'], 
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
                  options:
                     num_trees: 50

---
# Scikit-Learn: machine learning in Python
library: scikit
methods:
    ICA:
        run: ['metric']
        iteration: 3
        script: methods/scikit/ica.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv']

    PCA:
        run: ['metric']
        iteration: 3
        script: methods/scikit/pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv',
                      'datasets/artificial_data.csv', 'datasets/ionosphere.csv',
                      'datasets/bank8FM.csv', 'datasets/faces.csv',
                      'datasets/shuttle_train.csv', 'datasets/dexter_test.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']

            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv',
                      'datasets/artificial_data.csv', 'datasets/ionosphere.csv',
                      'datasets/bank8FM.csv', 'datasets/faces.csv',
                      'datasets/shuttle_train.csv', 'datasets/dexter_test.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                new_dimensionality: 2

            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv',
                      'datasets/artificial_data.csv', 'datasets/ionosphere.csv',
                      'datasets/bank8FM.csv', 'datasets/faces.csv',
                      'datasets/shuttle_train.csv', 'datasets/dexter_test.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                new_dimensionality: 2
                whiten: True

    PERCEPTRON:
        run: ['metric']
        script: methods/scikit/perceptron.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
              options:
                max_iterations: 10000

    ADABOOST:
            run: ['metric']
            script: methods/scikit/adaboost.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

    DTC:
            run: ['metric']
            script: methods/scikit/dtc.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

    ElasticNet:
            run: ['metric']
            script: methods/scikit/elastic_net.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

    KNC:
            run: ['metric']
            script: methods/scikit/knc.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

    QDA:
            run: ['metric']
            script: methods/scikit/qda.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

    RANDOMFOREST:
            run: ['metric']
            script: methods/scikit/random_forest.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'], 
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
                  options:
                    num_trees: 50
                    max_depth: 10
                    fitness_function: entropy
                    minimum_samples_split: 4
                    minimum_leaf_size: 2
                    num_jobs: 2
    SVM:
            run: ['metric']
            script: methods/scikit/svm.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]


    LDA:
            run: ['metric']
            script: methods/scikit/lda.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

    NMF:
        run: ['metric']
        iteration: 3
        script: methods/scikit/nmf.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/ionosphere.csv', 'datasets/piano_magnitude_spectogram.csv',
                      'datasets/optdigits.csv', 'datasets/waveform.csv',
                      'datasets/TomsHardware.csv', 'datasets/pendigits.csv',
                      'datasets/isolet.csv', 'datasets/mnist_all.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                rank: 6

    KMEANS:
        run: ['metric']
        iteration: 3
        script: methods/scikit/kmeans.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/waveform.csv', 'datasets/waveform_centroids.csv'] ]
              options:
                clusters: 2

            - files: [ ['datasets/wine.csv', 'datasets/wine_centroids.csv'],
                       ['datasets/iris.csv', 'datasets/iris_centroids.csv'] ]
              options:
                clusters: 3

            - files: [ ['datasets/cloud.csv', 'datasets/cloud_centroids.csv'] ]
              options:
                clusters: 5

            - files: [ ['datasets/USCensus1990.csv', 'datasets/USCensus1990_centroids.csv'] ]
              options:
                clusters: 6

            - files: [ ['datasets/covtype.csv', 'datasets/covtype_centroids.csv'],
                       ['datasets/wine_qual.csv', 'datasets/wine_qual_centroids.csv'] ]
              options:
                clusters: 7

            - files: [ ['datasets/isolet.csv', 'datasets/isolet_centroids.csv'] ]
              options:
                clusters: 26

            - files: [ ['datasets/mnist_all.csv', 'datasets/mnist_all_centroids.csv'],
                       ['datasets/corel-histogram.csv', 'datasets/corel-histogram_centroids.csv'] ]
              options:
                clusters: 10

            - files: [ ['datasets/1000000-10-randu.csv'] ]
              options:
                centroids: 75
    NBC:
        run: ['metric']
        iteration: 3
        script: methods/scikit/nbc.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv'],
                     ['datasets/transfusion_train.csv', 'datasets/transfusion_test.csv'],
                     ['datasets/madelon_train.csv', 'datasets/madelon_test.csv'] ]
    KPCA:
        run: ['metric']
        iteration: 3
        script: methods/scikit/kernel_pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: linear

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: polynomial

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: hyptan
    ANN:
        run: ['metric']
        script: methods/scikit/LSHForest.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
    LARS:
        run: ['metric']
        iteration: 3
        script: methods/scikit/lars.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                       ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'],
                       ['datasets/arcene_X.csv', 'datasets/arcene_y.csv'],
                       ['datasets/madelon_X.csv', 'datasets/madelon_y.csv'] ]
              options:
                lambda1: 0.01

    LASSO:
        run: ['metric']
        iteration: 3
        script: methods/scikit/lasso.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                       ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'],
                       ['datasets/arcene_X.csv', 'datasets/arcene_y.csv'],
                       ['datasets/madelon_X.csv', 'datasets/madelon_y.csv'] ]
              # script does not accept any options currently
              # options: '-l 0.01'

    SVR:
        run: ['metric']
        iteration: 3
        script: methods/scikit/svr.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/diabetes.csv'],
                       ['datasets/cosExp.csv'],
                       ['datasets/TomsHardware.csv']]
              options:
                c: 1.0
                epsilon: 1.0
                gamma: 0.1

    ALLKNN:
        run: ['metric']
        iteration: 3
        script: methods/scikit/allknn.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3 # random seed cannot be set
    GMM:
        run: ['metric']
        iteration: 3
        script: methods/scikit/gmm.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/artificial_2DSignal.csv', 'datasets/artificial_5DSignal.csv',
                      'datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/vehicle.csv', 'datasets/USCensus1990.csv',
                      'datasets/optdigits.csv', 'datasets/isolet.csv',
                      'datasets/TomsHardware.csv', 'datasets/covtype.csv']
              options:
                gaussians: 3

    LinearRegression:
        run: ['metric']
        iteration: 3
        script: methods/scikit/linear_regression.py
        format: [csv, txt, arff]
        datasets:
             - files: [ ['datasets/diabetes_X.csv'], ['datasets/cosExp_X.csv'],
                        ['datasets/mnist_all.csv'], ['datasets/tinyImages100k.csv'],
                        ['datasets/ticdata2000.csv'], ['datasets/TomsHardware.csv'],
                        ['datasets/madelon_train.csv', 'datasets/madelon_test.csv'],
                        ['datasets/arcene_train.csv', 'datasets/arcene_test.csv'] ]
    SparseCoding:
        run: ['metric']
        iteration: 3
        script: methods/scikit/sparse_coding.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/pendigits.csv']
              options:
                atoms: 12
                seed: 42
                max_iterations: 100

            - files: ['datasets/pendigits.csv']
              options:
                atoms: 12
                seed: 42

            - files: ['datasets/pendigits.csv']
              options:
                atoms: 12
                seed: 42
                normalize: True

    LinearRidgeRegression:
        run: ['metric']
        iteration: 3
        script: methods/scikit/linear_ridge_regression.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'] ]
              options:
                alpha: 1.0
            - files: [ ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'] ]
              options:
                alpha: 5.0
            - files: [ ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'] ]
              options:
                alpha: 50.0

    LogisticRegression:
        run: ['metric']
        iteration: 3
        script: methods/scikit/logistic_regression.py
        format: [csv,txt]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
---
# mlpy is a Python module for Machine Learning built on top of NumPy/SciPy
# and the GNU Scientific Libraries.
library: mlpy
methods:
    PCA:
        run: ['metric']
        iteration: 3
        script: methods/mlpy/pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv',
                      'datasets/artificial_data.csv', 'datasets/ionosphere.csv',
                      'datasets/bank8FM.csv', 'datasets/faces.csv',
                      'datasets/shuttle_train.csv', 'datasets/dexter_test.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']

            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv',
                      'datasets/artificial_data.csv', 'datasets/ionosphere.csv',
                      'datasets/bank8FM.csv', 'datasets/faces.csv',
                      'datasets/shuttle_train.csv', 'datasets/dexter_test.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                new_dimensionality: 2

            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv',
                      'datasets/artificial_data.csv', 'datasets/ionosphere.csv',
                      'datasets/bank8FM.csv', 'datasets/faces.csv',
                      'datasets/shuttle_train.csv', 'datasets/dexter_test.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                new_dimensionality: 2
                whiten: True

    KMEANS:
        run: ['metric']
        iteration: 3
        script: methods/mlpy/kmeans.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/waveform.csv', 'datasets/waveform_centroids.csv'] ]
              options:
                clusters: 2

            - files: [ ['datasets/wine.csv', 'datasets/wine_centroids.csv'],
                       ['datasets/iris.csv', 'datasets/iris_centroids.csv'] ]
              options:
                clusters: 3

            - files: [ ['datasets/cloud.csv', 'datasets/cloud_centroids.csv'] ]
              options:
                clusters: 5

            - files: [ ['datasets/USCensus1990.csv', 'datasets/USCensus1990_centroids.csv'] ]
              options:
                clusters: 6

            - files: [ ['datasets/covtype.csv', 'datasets/covtype_centroids.csv'],
                       ['datasets/wine_qual.csv', 'datasets/wine_qual_centroids.csv'] ]
              options:
                clusters: 7

            - files: [ ['datasets/isolet.csv', 'datasets/isolet_centroids.csv'] ]
              options:
                clusters: 26

            - files: [ ['datasets/mnist_all.csv', 'datasets/mnist_all_centroids.csv'],
                       ['datasets/corel-histogram.csv', 'datasets/corel-histogram_centroids.csv'] ]
              options:
                clusters: 10

            - files: [ ['datasets/1000000-10-randu.csv'] ]
              options:
                clusters: 75

    ElasticNet:
            run: ['metric']
            script: methods/mlpy/elastic_net.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

    KNC:
            run: ['metric']
            script: methods/mlpy/knc.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

    DECISIONTREE:
            run: ['metric']
            script: methods/mlpy/decision_tree.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv','datasets/scene_test.csv','datasets/scene_labels.csv'] ]
                  options:
                    stumps: 10
                    minimum_leaf_size: 10

                - files: [ ['datasets/iris_train.csv','datasets/iris_test.csv','datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv','datasets/oilspill_test.csv','datasets/oilspill_labels.csv'] ]

    LDA:
            run: ['metric']
            script: methods/mlpy/lda.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

    PERCEPTRON:
            run: ['metric']
            script: methods/mlpy/perceptron.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
                  options:
                    max_iterations: 10000

    SVM:
            run: ['metric']
            script: methods/mlpy/svm.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]



    Golub:
            run: ['metric']
            script: methods/mlpy/golub.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

    KPCA:
        run: ['metric']
        iteration: 3
        script: methods/mlpy/kernel_pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: linear

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: gaussian

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: hyptan

    LARS:
        run: ['metric']
        iteration: 3
        script: methods/mlpy/lars.py
        format: [csv, txt]
        datasets:
              - files: [ ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                         ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'],
                         ['datasets/arcene_X.csv', 'datasets/arcene_y.csv'],
                         ['datasets/madelon_X.csv', 'datasets/madelon_y.csv'] ]
                # TODO: add support for lambda to mlpy LARS
                # options: '-l 0.01'
    ALLKNN:
        run: ['metric']
        iteration: 3
        script: methods/mlpy/allknn.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3 # random seed cannot be specified

    LinearRegression:
        run: ['metric']
        iteration: 3
        script: methods/mlpy/linear_regression.py
        format: [csv, txt]
        datasets:
             - files: [ ['datasets/diabetes_X.csv'], ['datasets/cosExp_X.csv'],
                        ['datasets/mnist_all.csv'], ['datasets/tinyImages100k.csv'],
                        ['datasets/ticdata2000.csv'], ['datasets/TomsHardware.csv'],
                        ['datasets/madelon_train.csv', 'datasets/madelon_test.csv'],
                        ['datasets/arcene_train.csv', 'datasets/arcene_test.csv'] ]
---
# Shogun - A Large Scale Machine Learning Toolbox
library: shogun
methods:
    PCA:
        run: ['metric']
        iteration: 3
        script: methods/shogun/pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv',
                      'datasets/artificial_data.csv', 'datasets/ionosphere.csv',
                      'datasets/bank8FM.csv', 'datasets/faces.csv',
                      'datasets/shuttle_train.csv', 'datasets/dexter_test.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']

            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv',
                      'datasets/artificial_data.csv', 'datasets/ionosphere.csv',
                      'datasets/bank8FM.csv', 'datasets/faces.csv',
                      'datasets/shuttle_train.csv', 'datasets/dexter_test.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                new_dimensionality: 2

            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv',
                      'datasets/artificial_data.csv', 'datasets/ionosphere.csv',
                      'datasets/bank8FM.csv', 'datasets/faces.csv',
                      'datasets/shuttle_train.csv', 'datasets/dexter_test.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                new_dimensionality: 2
                whiten: True
    RANDOMFOREST:
        run: ['timing', 'metric']
        script: methods/shogun/random_forest.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
              options:
                num_trees: 50

    PERCEPTRON:
        run: ['metric']
        script: methods/shogun/perceptron.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/optdigits_train.csv', 'datasets/optdigits_test.csv', 'datasets/optdigits_labels.csv'],
                       ['datasets/madelon_train.csv', 'datasets/madelon_test.csv'],
                       ['datasets/arcene_train.csv', 'datasets/arcene_test.csv'] ]
              options:
                max_iterations: 10000

    KMEANS:
        run: ['metric']
        iteration: 3
        script: methods/shogun/kmeans.py
        format: [arff, csv, txt]
        datasets:
            - files: [ ['datasets/waveform.csv', 'datasets/waveform_centroids.csv'] ]
              options:
                clusters: 2

            - files: [ ['datasets/wine.csv', 'datasets/wine_centroids.csv'],
                       ['datasets/iris.csv', 'datasets/iris_centroids.csv'] ]
              options:
                clusters: 3

            - files: [ ['datasets/cloud.csv', 'datasets/cloud_centroids.csv'] ]
              options:
                clusters: 5

            - files: [ ['datasets/USCensus1990.csv', 'datasets/USCensus1990_centroids.csv'] ]
              options:
                clusters: 6

            - files: [ ['datasets/covtype.csv', 'datasets/covtype_centroids.csv'],
                       ['datasets/wine_qual.csv', 'datasets/wine_qual_centroids.csv'] ]
              options:
                clusters: 7

            - files: [ ['datasets/isolet.csv', 'datasets/isolet_centroids.csv'] ]
              options:
                clusters: 26

            - files: [ ['datasets/mnist_all.csv', 'datasets/mnist_all_centroids.csv'],
                       ['datasets/corel-histogram.csv', 'datasets/corel-histogram_centroids.csv'] ]
              options:
                clusters: 10

            - files: [ ['datasets/1000000-10-randu.csv'] ]
              options:
                clusters: 75
    KPCA:
        run: ['metric']
        iteration: 3
        script: methods/shogun/kernel_pca.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: linear

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: linear

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: polynomial

            - files: ['datasets/circle_data.csv', 'datasets/stock.csv',
                      'datasets/abalone.csv', 'datasets/bank8FM.csv',
                      'datasets/waveform.csv', 'datasets/TomsHardware.csv',
                      'datasets/arcene_X.csv', 'datasets/madelon_X.csv',
                      'datasets/pendigits.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv']
              options:
                kernel: hyptan
    NBC:
        run: ['metric']
        iteration: 3
        script: methods/shogun/nbc.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv'],
                       ['datasets/transfusion_train.csv', 'datasets/transfusion_test.csv'],
                       ['datasets/madelon_train.csv', 'datasets/madelon_test.csv'] ]

    ALLKNN:
        run: ['metric']
        iteration: 3
        script: methods/shogun/allknn.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3

    GMM:
        run: ['metric']
        iteration: 3
        script: methods/shogun/gmm.py
        format: [csv, txt]
        datasets:
            - files: ['datasets/artificial_2DSignal.csv', 'datasets/artificial_5DSignal.csv',
                      'datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/vehicle.csv', 'datasets/USCensus1990.csv',
                      'datasets/optdigits.csv', 'datasets/isolet.csv',
                      'datasets/TomsHardware.csv', 'datasets/covtype.csv']
              options:
                gaussians: 3

    LinearRegression:
        run: ['metric']
        iteration: 3
        script: methods/shogun/linear_regression.py
        format: [csv, txt]
        datasets:
             - files: [ ['datasets/diabetes_X.csv'], ['datasets/cosExp_X.csv'],
                        ['datasets/mnist_all.csv'], ['datasets/tinyImages100k.csv'],
                        ['datasets/ticdata2000.csv'], ['datasets/TomsHardware.csv'],
                        ['datasets/madelon_train.csv', 'datasets/madelon_test.csv'],
                        ['datasets/arcene_train.csv', 'datasets/arcene_test.csv'] ]

    LASSO:
        run: ['metric']
        iteration: 3
        script: methods/shogun/lasso.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/diabetes_X.csv', 'datasets/diabetes_y.csv'],
                       ['datasets/cosExp_X.csv', 'datasets/cosExp_y.csv'],
                       ['datasets/arcene_X.csv', 'datasets/arcene_y.csv'],
                       ['datasets/madelon_X.csv', 'datasets/madelon_y.csv']]
              options:
                lambda1: 0.01

    QDA:
            run: ['metric','metric']
            script: methods/shogun/qda.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

    LogisticRegression:
            run: ['metric','metric']
            script: methods/shogun/logistic_regression.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

    LinearRidgeRegression:
        run: ['metric']
        iteration: 3
        script: methods/shogun/linear_ridge_regression.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'] ]
              options:
                alpha: 1.0
            - files: [ ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'] ]
              options:
                alpha: 5.0
            - files: [ ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'] ]
              options:
                alpha: 50.0

    SVR:
        run: ['metric']
        iteration: 3
        script: methods/shogun/svr.py
        format: [csv, txt]
        datasets:
            - files: [ ['datasets/diabetes.csv'],
                       ['datasets/cosExp.csv'],
                       ['datasets/TomsHardware.csv']]
              options:
                c: 1.0
                epsilon: 1.0
                gamma: 0.1

    KNC:
            run: ['timing', 'metric']
            script: methods/shogun/knc.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
    DTC:
            run: ['timing', 'metric']
            script: methods/shogun/decision_tree.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

---
# Weka: Data Mining Software in Java
library: weka
methods:
    PCA:
        run: ['metric']
        iteration: 3
        script: methods/weka/pca.py
        format: [arff]
        datasets:
            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv',
                      'datasets/artificial_data.csv', 'datasets/ionosphere.csv',
                      'datasets/bank8FM.csv', 'datasets/faces.csv',
                      'datasets/shuttle_train.csv', 'datasets/dexter_test.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']

            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv',
                      'datasets/artificial_data.csv', 'datasets/ionosphere.csv',
                      'datasets/bank8FM.csv', 'datasets/faces.csv',
                      'datasets/shuttle_train.csv', 'datasets/dexter_test.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                new_dimensionality: 2

            - files: ['datasets/iris.csv', 'datasets/wine.csv',
                      'datasets/cities.csv', 'datasets/diabetes_X.csv',
                      'datasets/artificial_data.csv', 'datasets/ionosphere.csv',
                      'datasets/bank8FM.csv', 'datasets/faces.csv',
                      'datasets/shuttle_train.csv', 'datasets/dexter_test.csv',
                      'datasets/arcene_X.csv','datasets/madelon_X.csv',
                      'datasets/corel-histogram.csv', 'datasets/isolet.csv',
                      'datasets/covtype.csv', 'datasets/1000000-10-randu.csv',
                      'datasets/mnist_all.csv', 'datasets/Twitter.csv',
                      'datasets/tinyImages100k.csv', 'datasets/yearpredictionmsd.csv']
              options:
                new_dimensionality: 2
                whiten: True
    KMEANS:
        run: ['metric']
        iteration: 3
        script: methods/weka/kmeans.py
        format: [arff]
        datasets:
            - files: [ ['datasets/waveform.csv'] ]
              options:
                clusters: 2

            - files: [ ['datasets/wine.csv'],
                       ['datasets/iris.csv'] ]
              options:
                clusters: 3

            - files: [ ['datasets/cloud.csv'] ]
              options:
                clusters: 5

            - files: [ ['datasets/USCensus1990.csv'] ]
              options:
                clusters: 6

            - files: [ ['datasets/covtype.csv'],
                       ['datasets/wine_qual.csv'] ]
              options:
                clusters: 7

            - files: [ ['datasets/isolet.csv'] ]
              options:
                clusters: 26

            - files: [ ['datasets/mnist_all.csv'],
                       ['datasets/corel-histogram.csv'] ]
              options:
                clusters: 10

            - files: [ ['datasets/1000000-10-randu.csv'] ]
              options:
                clusters: 75
    ALLKNN:
        run: ['metric']
        iteration: 3
        script: methods/weka/allknn.py
        format: [arff]
        datasets:
            - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                      'datasets/wine_qual.csv', 'datasets/isolet.csv',
                      'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                      'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                      'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
              options:
                k: 3
                seed: 42

    LinearRegression:
        run: ['metric']
        iteration: 3
        script: methods/weka/linear_regression.py
        format: [arff]
        datasets:
             - files: [ ['datasets/diabetes_X.csv'], ['datasets/cosExp_X.csv'],
                        ['datasets/mnist_all.csv'], ['datasets/tinyImages100k.csv'],
                        ['datasets/ticdata2000.csv'], ['datasets/TomsHardware.csv'],
                        ['datasets/madelon_train.csv', 'datasets/madelon_test.csv'],
                        ['datasets/arcene_train.csv', 'datasets/arcene_test.csv'] ]
    DTC:
        run: ['metric']
        script: methods/weka/dtc.py
        format: [arff]
        datasets:
             - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'], 
                        ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                        ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                        ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                        ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                        ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                        ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                        ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                        ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                        ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                        ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                        ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
    LogisticRegression:
        run: ['metric']
        iteration: 3
        script: methods/weka/logistic_regression.py
        format: [arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
    NBC:
        run: ['metric']
        iteration: 3
        script: methods/weka/nbc.py
        format: [arff]
        datasets:
            - files: [ ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
    RANDOMFOREST:
        run: ['metric']
        script: methods/weka/random_forest.py
        format: [arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'], 
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

    PERCEPTRON:
        run: ['metric']
        script: methods/weka/perceptron.py
        format: [arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

---
#  ANN:
#  A Library for Approximate Nearest Neighbor Searching
library: ann
methods:
    ALLKNN:
          run: ['metric']
          script: methods/ann/allknn.py
          format: [csv, txt]
          datasets:
              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv', 'datasets/isolet.csv',
                        'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                        'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                        'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
                options:
                  k: 3
                  seed: 42

              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv', 'datasets/isolet.csv',
                        'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                        'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                        'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
                options:
                  k: 3
                  seed: 42
                  epsilon: 0.0

              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv', 'datasets/isolet.csv',
                        'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                        'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                        'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
                options:
                  k: 3
                  seed: 42
                  epsilon: 0.05

              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv', 'datasets/isolet.csv',
                        'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                        'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                        'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
                options:
                  k: 3
                  seed: 42
                  epsilon: 0.10

              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv', 'datasets/isolet.csv',
                        'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                        'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                        'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
                options:
                  k: 3
                  seed: 42
                  epsilon: 0.15

              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv', 'datasets/isolet.csv',
                        'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                        'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                        'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
                options:
                  k: 3
                  seed: 42
                  epsilon: 0.20

              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv', 'datasets/isolet.csv',
                        'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                        'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                        'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
                options:
                  k: 3
                  seed: 42
                  epsilon: 0.25
---
#  FLANN:
#  A Library for Fast Library for Approximate Nearest Neighbors
library: flann
methods:
    ALLKNN:
          run: ['metric']
          script: methods/flann/allknn.py
          format: [csv, txt]
          datasets:
              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv', 'datasets/isolet.csv',
                        'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                        'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                        'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
                options:
                  k: 3
                  seed: 42

              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv', 'datasets/isolet.csv',
                        'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                        'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                        'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
                options:
                  k: 3
                  seed: 42
                  epsilon: 0.0

              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv', 'datasets/isolet.csv',
                        'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                        'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                        'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
                options:
                  k: 3
                  seed: 42
                  epsilon: 0.0

              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv', 'datasets/isolet.csv',
                        'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                        'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                        'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
                options:
                  k: 3
                  seed: 42
                  epsilon: 0.0

              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv', 'datasets/isolet.csv',
                        'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                        'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                        'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
                options:
                  k: 3
                  seed: 42
                  epsilon: 0.0

              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv', 'datasets/isolet.csv',
                        'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                        'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                        'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
                options:
                  k: 3
                  seed: 42
                  epsilon: 0.0

              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv', 'datasets/isolet.csv',
                        'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                        'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                        'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
                options:
                  k: 3
                  seed: 42
                  epsilon: 0.0
---
# MRPT: fast nearest neighbor search with random projection
library: mrpt
methods:
    ANN:
        run: ['metric']
        script: methods/mrpt/ann.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
              options:
                k: 10
                num_trees: 10
---
# Annoy: Approximate Nearest Neighbors Oh Yeah
library: annoy
methods:
    ANN:
        run: ['metric']
        script: methods/annoy/ann.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
              options:
                k: 10
                trees: 10
---
# Nearpy
library: nearpy
methods:
    ANN:
        run: ['metric']
        script: methods/nearpy/ann.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
---
# Milk Machine Learning Toolkit for Python
library: milk
methods:
    KMEANS:
        run: ['metric']
        script: methods/milk/kmeans.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/waveform.csv', 'datasets/waveform_centroids.csv'] ]
              options:
                clusters: 2

            - files: [ ['datasets/wine.csv', 'datasets/wine_centroids.csv'],
                       ['datasets/iris.csv', 'datasets/iris_centroids.csv'] ]
              options:
                clusters: 3

            - files: [ ['datasets/cloud.csv', 'datasets/cloud_centroids.csv'] ]
              options:
                clusters: 5

            - files: [ ['datasets/USCensus1990.csv', 'datasets/USCensus1990_centroids.csv'] ]
              options:
                clusters: 6

            - files: [ ['datasets/covtype.csv', 'datasets/covtype_centroids.csv'],
                       ['datasets/wine_qual.csv', 'datasets/wine_qual_centroids.csv'] ]
              options:
                clusters: 7

            - files: [ ['datasets/isolet.csv', 'datasets/isolet_centroids.csv'] ]
              options:
                clusters: 26

            - files: [ ['datasets/mnist_all.csv', 'datasets/mnist_all_centroids.csv'],
                       ['datasets/corel-histogram.csv', 'datasets/corel-histogram_centroids.csv'] ]
              options:
                clusters: 10

    RANDOMFOREST:
        run: ['timing', 'metric']
        script: methods/milk/random_forest.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
    ADABOOST:
            run: ['metric']
            script: methods/milk/adaboost.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
    DTC:
            run: ['metric']
            script: methods/milk/dtc.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
    PERCEPTRON:
        run: ['metric']
        script: methods/milk/perceptron.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                       ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                       ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                       ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                       ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                       ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                       ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                       ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                       ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                       ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                       ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
    LogisticRegression:
            run: ['metric','metric']
            script: methods/milk/logistic_regression.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'] ]
---
# R
library: R
methods:
    NBC:
        run: ['metric']
        script: methods/R/nbc.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                       ['datasets/transfusion_train.csv', 'datasets/transfusion_test.csv'],
                       ['datasets/madelon_train.csv', 'datasets/madelon_test.csv'] ]

    QDA:
            run: ['metric']
            script: methods/R/qda.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/iris_train.csv', 'datasets/iris_test.csv', 'datasets/iris_labels.csv'],
                           ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
    LDA:
            run: ['metric']
            script: methods/R/lda.py
            format: [csv, txt, arff]
            datasets:
                - files: [ ['datasets/oilspill_train.csv', 'datasets/oilspill_test.csv', 'datasets/oilspill_labels.csv'],
                           ['datasets/scene_train.csv', 'datasets/scene_test.csv', 'datasets/scene_labels.csv'],
                           ['datasets/webpage_train.csv', 'datasets/webpage_test.csv', 'datasets/webpage_labels.csv'],
                           ['datasets/isolet_train.csv', 'datasets/isolet_test.csv', 'datasets/isolet_labels.csv'],
                           ['datasets/mammography_train.csv', 'datasets/mammography_test.csv', 'datasets/mammography_labels.csv'],
                           ['datasets/reuters_train.csv', 'datasets/reuters_test.csv', 'datasets/reuters_labels.csv'],
                           ['datasets/abalone19_train.csv', 'datasets/abalone19_test.csv', 'datasets/abalone19_labels.csv'],
                           ['datasets/sickEuthyroid_train.csv', 'datasets/sickEuthyroid_test.csv', 'datasets/sickEuthyroid_labels.csv'],
                           ['datasets/abalone7_train.csv', 'datasets/abalone7_test.csv', 'datasets/abalone7_labels.csv'],
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]

---
# dlibml
library: dlibml
methods:
    ANN:
          run: ['metric']
          script: methods/dlibml/ANN.py
          format: [csv, txt]
          datasets:
              - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                        'datasets/wine_qual.csv', 'datasets/isolet.csv',
                        'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                        'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                        'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
                options:
                  k: 3
                  num: 10000
                  sample_pct: 0.5
                           ['datasets/satellite_train.csv', 'datasets/satellite_test.csv', 'datasets/satellite_labels.csv'],
                           ['datasets/ecoli_train.csv', 'datasets/ecoli_test.csv', 'datasets/ecoli_labels.csv'] ]
    ALLKNN:
            run: ['metric']
            iteration: 3
            script: methods/dlibml/ALLKNN.py
            format: [csv, txt]
            datasets:
                - files: ['datasets/wine.csv', 'datasets/cloud.csv',
                          'datasets/wine_qual.csv', 'datasets/isolet.csv',
                          'datasets/corel-histogram.csv', 'datasets/covtype.csv',
                          'datasets/1000000-10-randu.csv', 'datasets/mnist_all.csv',
                          'datasets/Twitter.csv', 'datasets/tinyImages100k.csv']
                  options:
                     k: 3

    KMEANS:
        run: ['metric']
        script: methods/dlibml/KMEANS.py
        format: [csv, txt, arff]
        datasets:
            - files: [ ['datasets/waveform.csv', 'datasets/waveform_centroids.csv'] ]
              options:
                clusters: 2

            - files: [ ['datasets/wine.csv', 'datasets/wine_centroids.csv'],
                       ['datasets/iris.csv', 'datasets/iris_centroids.csv'] ]
              options:
                clusters: 3

            - files: [ ['datasets/cloud.csv', 'datasets/cloud_centroids.csv'] ]
              options:
                clusters: 5

            - files: [ ['datasets/USCensus1990.csv', 'datasets/USCensus1990_centroids.csv'] ]
              options:
                clusters: 6

            - files: [ ['datasets/covtype.csv', 'datasets/covtype_centroids.csv'],
                       ['datasets/wine_qual.csv', 'datasets/wine_qual_centroids.csv'] ]
              options:
                clusters: 7

            - files: [ ['datasets/isolet.csv', 'datasets/isolet_centroids.csv'] ]
              options:
                clusters: 26

            - files: [ ['datasets/mnist_all.csv', 'datasets/mnist_all_centroids.csv'],
                       ['datasets/corel-histogram.csv', 'datasets/corel-histogram_centroids.csv'] ]
              options:
                clusters: 10

            - files: [ ['datasets/1000000-10-randu.csv'] ]
              options:
                clusters: 75
